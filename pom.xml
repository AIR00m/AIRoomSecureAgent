<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.airoom.secureagent</groupId>
    <artifactId>AIRoomSecureAgent</artifactId>

    <!-- 앱/페이로드에 들어갈 실제 버전 -->
    <version>1.0.1</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.30</version>
        </dependency>
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>6.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.5</version>
        </dependency>
        <!--  메타데이터 삽입 중 PNG/JPEG용 라이브러리나 캐시가 필요할 때  -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>3.1.8</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <version>3.10.1</version>
            <!--  추후 JPEG 스테가 구현 시  -->
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-core</artifactId>
            <version>3.10.1</version>
        </dependency>
        <!--  JSON 로그 전송용 (StatusServer가 사용한다면)  -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
    </dependencies>

    <build>

        <!-- 리소스 필터링: agent.properties만 치환 -->
        <resources>
            <!-- agent.properties는 ${project.version} 치환 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>agent.properties</include>
                </includes>
            </resource>
            <!-- 아이콘/이미지 등은 필터링 금지 (손상 방지) -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>agent.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <!--
                모든 의존성 포함한 단일 JAR
                shaded 단일 JAR 생성
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>shade</goal></goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <!-- 핵심: -shaded.jar를 “추가”로 붙이기 -->
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>shaded</shadedClassifierName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.airoom.secureagent.SecureAgentMain</mainClass>
                                    <!-- Manifest에 버전/제목 주입 -->
                                    <manifestEntries>
                                        <Implementation-Title>${project.artifactId}</Implementation-Title>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <!-- shaded JAR만 jpackage 입력 폴더로 스테이징(용량 다이어트 핵심) -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>stage-jpackage-input</id>
                        <phase>package</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jpkg</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.artifactId}-${project.version}-shaded.jar</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Windows EXE 생성
                jpackage: exe 설치파일 만들기
            -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.6.6</version>
                <executions>
                    <execution>
                        <id>make-exe</id>
                        <phase>package</phase>
                        <goals><goal>jpackage</goal></goals>
                        <configuration>
                            <!-- 산출물 입력/출력 -->
                            <!-- target 전체 대신 jpkg(= shaded JAR만) 사용 -->
                            <input>${project.build.directory}/jpkg</input>
                            <destination>${project.build.directory}/dist</destination>

                            <!-- shaded JAR 파일명, 위에서 classifier=shaded 로 만들었으니 이 이름이 맞다 -->
                            <mainJar>${project.artifactId}-${project.version}-shaded.jar</mainJar>
                            <mainClass>com.airoom.secureagent.SecureAgentMain</mainClass>

                            <!-- 앱 메타 -->
                            <name>SecureAgent</name>
                            <vendor>AIROOM</vendor>
                            <appVersion>${project.version}</appVersion>
                            <type>EXE</type>
                            <winUpgradeUuid>c6e987ca-0b39-44a4-b742-7b7380b1ce56</winUpgradeUuid>
                            <!--Windows 업그레이드 식별자는 UUID/GUID 형식 8-4-4-4-12 하이픈 포함, 32자리 16진수 -->

                            <!-- Windows 옵션 -->
                            <winShortcut>true</winShortcut>         <!-- 바탕화면 바로가기 생성 -->
                            <winMenu>false</winMenu>                 <!-- 시작 메뉴 등록 -->
                            <winConsole>false</winConsole>            <!-- 개발 확인용: 콘솔창 표시 -->
                            <winPerUserInstall>true</winPerUserInstall> <!-- 관리자 권한 없이 사용자 단위 설치 -->
                            <icon>${project.basedir}/src/main/resources/app/yellowicon.ico</icon>

                            <!-- JVM 옵션/시스템 프로퍼티 -->
                            <javaOptions>
                                <javaOption>-Xms128m</javaOption>
                                <javaOption>-Xmx512m</javaOption>
                                <javaOption>-Daidt.spool.encrypt=true</javaOption>
                                <javaOption>-Dsecureagent.test=true</javaOption>
                                <javaOption>-Dsecureagent.smoke=true</javaOption>
                                <javaOption>-Dsecureagent.forensic=true</javaOption>
                                <javaOption>-Dsecureagent.devlog=true</javaOption>


                                <!-- 서버 목적지/경로 주입 (property가 env보다 우선) -->
                                <javaOption>-Daidt.appId=SecureAgent/${project.version}</javaOption>
                                <javaOption>-Daidt.baseUrl=http://43.200.2.244:8080</javaOption>
                                <javaOption>-Daidt.logPath=/api/agent/log</javaOption>
                                <javaOption>-Daidt.eventPath=/api/agent/event</javaOption>
                            </javaOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
